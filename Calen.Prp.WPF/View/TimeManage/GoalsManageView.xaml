<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:mahapps="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:local="clr-namespace:Calen.Prp.WPF.View"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" x:Class="Calen.Prp.WPF.View.GoalsManageView"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300" 
             Background="{DynamicResource BlankColorKey}" >
    <Grid Name="rootLayout" Grid.Row="1" Grid.Column="1" DataContext="{Binding GoalManager}">
        <Grid.RowDefinitions>
            <RowDefinition Height="42"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>
        <Grid Background="{DynamicResource PrimaryLightColorKey}" >
            <TextBlock Text="目标列表" FontSize="{DynamicResource FontSize_Normal}" Foreground="{DynamicResource Foreground_TitleKey}" VerticalAlignment="Center" Margin="12,0,0,0"/>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="12,0">
                <Button Style="{DynamicResource ButtonStyle_TransparentBackground}"  Padding="6" Command="{Binding CreateGoalCommand}">
                    <StackPanel Orientation="Horizontal">
                        <Path Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" Data="{DynamicResource Geometry_AddButtonIcon}" Height="16" Stretch="Uniform"/>
                        <TextBlock Text="添加目标"  VerticalAlignment="Center" Margin="4,0,0,0"/>
                    </StackPanel>
                </Button>
            </StackPanel>
        </Grid>
        <Grid Grid.Row="1" >
            <Grid Margin="12">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Border >
                    <Grid Height="40">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBox x:Name="txt_goalInput" Text="{Binding BufferGoalItem.Model.Content, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource TextBoxStyle_Common}"  Background="{DynamicResource BlankColorKey}"  FontSize="{DynamicResource FontSize_Large}" BorderBrush="{DynamicResource PrimaryMedianColorKey}" VerticalContentAlignment="Center"  Foreground="{DynamicResource Foreground_NormalKey}" mahapps:TextBoxHelper.Watermark="一句话描述您的目标，按Enter键插入..." Padding="4,0" BorderThickness="1,1,0,1"
								mahapps:TextBoxHelper.ClearTextButton="True" Loaded="txt_goalInput_Loaded">
                                <TextBox.InputBindings>
                                    <KeyBinding Key="Enter" Command="{Binding AddGoalCommand}" />
                                </TextBox.InputBindings>
                            </TextBox>
                            <Grid Grid.Column="1">
                                <ToggleButton x:Name="tgb_detail"  Style="{DynamicResource ToggleButtonStyle_GeometryContent}" Content="{DynamicResource Geometry_NavigationMenuListIcon}" Padding="13" BorderThickness="0,1,1,1"  BorderBrush="{DynamicResource PrimaryMedianColorKey}" ToolTip="详细设置"/>
                                <Control x:Name="popUpAnchor" Height="0" Width="0" VerticalAlignment="Bottom" HorizontalAlignment="Right"/>
                            </Grid>

                            <local:HdtPopup IsOpen="{Binding IsChecked, ElementName=tgb_detail}" PopupAnimation="Slide" AllowsTransparency="True" PlacementTarget="{Binding ElementName=popUpAnchor}"   StaysOpen="False" Placement="Left" >
                                <local:GoalDetailPopupView />
                            </local:HdtPopup>

                        </Grid>

                        <Button Grid.Column="1" BorderThickness="0,1,1,1"  Style="{DynamicResource ButtonStyle_GeometryContent}" Content="{DynamicResource Geometry_AddButtonIcon}" Padding="9" BorderBrush="{DynamicResource PrimaryMedianColorKey}" ToolTip="添加"
							Command="{Binding AddGoalCommand}" Visibility="Collapsed"/>
                    </Grid>
                </Border>
                <Border Grid.Row="1" Margin="0,10,0,0">
                    <ListBox ItemsSource="{Binding GoalList}" SelectedItem="{Binding SelectedGoal}" AlternationCount="2" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Tag="{Binding ElementName=rootLayout,Path=DataContext}" ScrollViewer.CanContentScroll="False">
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="Template" >
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <Border x:Name="border" Height="48" BorderThickness="0" Padding="14,0" Background="{DynamicResource PrimaryLightColorKey}" TextElement.Foreground="{DynamicResource Foreground_NormalKey}" TextElement.FontSize="{DynamicResource FontSize_Large}" Tag="{Binding RelativeSource={RelativeSource AncestorType=ListBox},Path=Tag}">
                                                <Border.InputBindings>
                                                    <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding RelativeSource={RelativeSource AncestorType=ListBox},Path=Tag.ShowSelectedItemDetailCommand}"/>
                                                </Border.InputBindings>
                                                <Border.ContextMenu>
                                                    <ContextMenu PlacementTarget="{Binding ElementName=border}">
                                                        <MenuItem Header="删除" Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu},Path=PlacementTarget.Tag.DeleteSelectedItemCommand}" CommandParameter="{Binding}"/>
                                                    </ContextMenu>
                                                </Border.ContextMenu>
                                                <Grid HorizontalAlignment="Stretch">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="auto"/>
                                                        <ColumnDefinition/>
                                                        <ColumnDefinition Width="auto"/>
                                                        <ColumnDefinition Width="auto"/>
                                                        <ColumnDefinition Width="auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Border BorderBrush="{DynamicResource Foreground_LightKey}" BorderThickness="1" CornerRadius="2" Height="17" Width="17" Margin="0,0,10,0" >
                                                        <Button Name="tgb_isAchieved" Style="{DynamicResource ButtonStyle_GeometryContent}" Command="{Binding ChangeGoalStateCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListBox},Path=ItemsSource}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                           
                                                        </Button>
                                                    </Border>
                                                        
                                                    <TextBlock Grid.Column="1"  Text="{Binding Model.Content}" VerticalAlignment="Center" TextTrimming="CharacterEllipsis" ToolTip="{Binding Model.Content}" HorizontalAlignment="Left"/>
                                                    <local:StarLevelIndicator Grid.Column="2" Margin="14,16" CurrentLevel="{Binding Model.Level,Mode=TwoWay}" IsHitTestVisible="False"/>
                                                    <TextBlock Grid.Column="3"  Text="{Binding Model.EndTime, StringFormat=yyyy-MM-dd}" VerticalAlignment="Center" FontSize="{DynamicResource FontSize_Small}" Foreground="{DynamicResource Foreground_LightKey}"/>
                                                    <Button Grid.Column="4" Style="{DynamicResource ButtonStyle_GeometryContent}" Content="{DynamicResource Geometry_EditButtonIcon}" Padding="12" Margin="4,4,-8,4" Background="Transparent" Command="{Binding RelativeSource={RelativeSource AncestorType=ListBox},Path=Tag.ShowSelectedItemDetailCommand}" CommandParameter="{Binding}"></Button>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource BlankColorKey}"/>
                                                </Trigger>

                                                <Trigger Property="IsSelected" Value="true">
                                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource PrimaryColorKey}"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="true">
                                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource PrimaryMedianColorKey}"/>
                                                </Trigger>
                                                <DataTrigger Binding="{Binding Model.IsAchieved}" Value="true">
                                                    <Setter TargetName="tgb_isAchieved" Property="Content">
                                                        <Setter.Value>
                                                            <PathGeometry>
                                                                M40.267,14.628L20.974,33.921l-9.293-9.293c-0.391-0.391-1.023-0.391-1.414,0s-0.391,1.023,0,1.414l10,10
	c0.195,0.195,0.451,0.293,0.707,0.293s0.512-0.098,0.707-0.293l20-20c0.391-0.391,0.391-1.023,0-1.414S40.657,14.237,40.267,14.628z
                                                            </PathGeometry>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter TargetName="tgb_isAchieved" Property="Margin" Value="0,-6,-6,0"/>
                                                    <Setter TargetName="border" Property="Opacity" Value="0.4"/>
                                                </DataTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel IsItemsHost="True">
                                    <i:Interaction.Behaviors>
                                        <ei:FluidMoveBehavior AppliesTo="Children" Duration="0:0:0.4">
                                        </ei:FluidMoveBehavior>
                                    </i:Interaction.Behaviors>
                                </VirtualizingStackPanel>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.GroupStyle>
                            <GroupStyle>
                                <GroupStyle.ContainerStyle>
                                    <Style TargetType="{x:Type GroupItem}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type GroupItem}">
                                                    <ItemsPresenter />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Name}"  Value="true">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type GroupItem}">
                                                            <Expander IsExpanded="True" Style="{DynamicResource ExpanderStyle_CheckedItemsContainer}">
                                                                <Expander.Header>
                                                                    <StackPanel Orientation="Horizontal"  Margin="0,0,10,0">
                                                                        <TextBlock Text="显示已完成的目标"  />
                                                                        <TextBlock Text="{Binding Path=ItemCount, StringFormat=（{0}）}"/>
                                                                    </StackPanel>
                                                                </Expander.Header>
                                                                <ItemsPresenter />
                                                            </Expander>

                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </GroupStyle.ContainerStyle>
                              
                            </GroupStyle>
                        </ListBox.GroupStyle>

                    </ListBox>
                </Border>
            </Grid>
        </Grid>
        <local:SlidePanel ExpandedWidth="300" HorizontalAlignment="Right" VerticalAlignment="Stretch" Grid.Column="1" Grid.RowSpan="2" IsOpened="{Binding IsGoalDetialPanelShowed}" >
            <local:GoalEditPanel x:Name="goalEdit"/>
        </local:SlidePanel>
    </Grid>
</UserControl>
